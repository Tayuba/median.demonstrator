// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Median (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        PxlStream_V_pixel_da_8_dout,
        PxlStream_V_pixel_da_8_empty_n,
        PxlStream_V_pixel_da_8_read,
        PxlStream_V_pixel_da_7_dout,
        PxlStream_V_pixel_da_7_empty_n,
        PxlStream_V_pixel_da_7_read,
        PxlStream_V_pixel_da_6_dout,
        PxlStream_V_pixel_da_6_empty_n,
        PxlStream_V_pixel_da_6_read,
        PxlStream_V_pixel_da_5_dout,
        PxlStream_V_pixel_da_5_empty_n,
        PxlStream_V_pixel_da_5_read,
        PxlStream_V_pixel_da_4_dout,
        PxlStream_V_pixel_da_4_empty_n,
        PxlStream_V_pixel_da_4_read,
        PxlStream_V_pixel_da_3_dout,
        PxlStream_V_pixel_da_3_empty_n,
        PxlStream_V_pixel_da_3_read,
        PxlStream_V_pixel_da_2_dout,
        PxlStream_V_pixel_da_2_empty_n,
        PxlStream_V_pixel_da_2_read,
        PxlStream_V_pixel_da_1_dout,
        PxlStream_V_pixel_da_1_empty_n,
        PxlStream_V_pixel_da_1_read,
        PxlStream_V_pixel_da_dout,
        PxlStream_V_pixel_da_empty_n,
        PxlStream_V_pixel_da_read,
        PxlStream_V_pixel_us_8_dout,
        PxlStream_V_pixel_us_8_empty_n,
        PxlStream_V_pixel_us_8_read,
        PxlStream_V_pixel_us_7_dout,
        PxlStream_V_pixel_us_7_empty_n,
        PxlStream_V_pixel_us_7_read,
        PxlStream_V_pixel_us_6_dout,
        PxlStream_V_pixel_us_6_empty_n,
        PxlStream_V_pixel_us_6_read,
        PxlStream_V_pixel_us_5_dout,
        PxlStream_V_pixel_us_5_empty_n,
        PxlStream_V_pixel_us_5_read,
        PxlStream_V_pixel_us_4_dout,
        PxlStream_V_pixel_us_4_empty_n,
        PxlStream_V_pixel_us_4_read,
        PxlStream_V_pixel_us_3_dout,
        PxlStream_V_pixel_us_3_empty_n,
        PxlStream_V_pixel_us_3_read,
        PxlStream_V_pixel_us_2_dout,
        PxlStream_V_pixel_us_2_empty_n,
        PxlStream_V_pixel_us_2_read,
        PxlStream_V_pixel_us_1_dout,
        PxlStream_V_pixel_us_1_empty_n,
        PxlStream_V_pixel_us_1_read,
        PxlStream_V_pixel_us_dout,
        PxlStream_V_pixel_us_empty_n,
        PxlStream_V_pixel_us_read,
        PxlStream_V_pixel_la_8_dout,
        PxlStream_V_pixel_la_8_empty_n,
        PxlStream_V_pixel_la_8_read,
        PxlStream_V_pixel_la_7_dout,
        PxlStream_V_pixel_la_7_empty_n,
        PxlStream_V_pixel_la_7_read,
        PxlStream_V_pixel_la_6_dout,
        PxlStream_V_pixel_la_6_empty_n,
        PxlStream_V_pixel_la_6_read,
        PxlStream_V_pixel_la_5_dout,
        PxlStream_V_pixel_la_5_empty_n,
        PxlStream_V_pixel_la_5_read,
        PxlStream_V_pixel_la_4_dout,
        PxlStream_V_pixel_la_4_empty_n,
        PxlStream_V_pixel_la_4_read,
        PxlStream_V_pixel_la_3_dout,
        PxlStream_V_pixel_la_3_empty_n,
        PxlStream_V_pixel_la_3_read,
        PxlStream_V_pixel_la_2_dout,
        PxlStream_V_pixel_la_2_empty_n,
        PxlStream_V_pixel_la_2_read,
        PxlStream_V_pixel_la_1_dout,
        PxlStream_V_pixel_la_1_empty_n,
        PxlStream_V_pixel_la_1_read,
        PxlStream_V_pixel_la_dout,
        PxlStream_V_pixel_la_empty_n,
        PxlStream_V_pixel_la_read,
        MdnStream_V_data_V_din,
        MdnStream_V_data_V_full_n,
        MdnStream_V_data_V_write,
        MdnStream_V_user_V_din,
        MdnStream_V_user_V_full_n,
        MdnStream_V_user_V_write,
        MdnStream_V_last_V_din,
        MdnStream_V_last_V_full_n,
        MdnStream_V_last_V_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] PxlStream_V_pixel_da_8_dout;
input   PxlStream_V_pixel_da_8_empty_n;
output   PxlStream_V_pixel_da_8_read;
input  [7:0] PxlStream_V_pixel_da_7_dout;
input   PxlStream_V_pixel_da_7_empty_n;
output   PxlStream_V_pixel_da_7_read;
input  [7:0] PxlStream_V_pixel_da_6_dout;
input   PxlStream_V_pixel_da_6_empty_n;
output   PxlStream_V_pixel_da_6_read;
input  [7:0] PxlStream_V_pixel_da_5_dout;
input   PxlStream_V_pixel_da_5_empty_n;
output   PxlStream_V_pixel_da_5_read;
input  [7:0] PxlStream_V_pixel_da_4_dout;
input   PxlStream_V_pixel_da_4_empty_n;
output   PxlStream_V_pixel_da_4_read;
input  [7:0] PxlStream_V_pixel_da_3_dout;
input   PxlStream_V_pixel_da_3_empty_n;
output   PxlStream_V_pixel_da_3_read;
input  [7:0] PxlStream_V_pixel_da_2_dout;
input   PxlStream_V_pixel_da_2_empty_n;
output   PxlStream_V_pixel_da_2_read;
input  [7:0] PxlStream_V_pixel_da_1_dout;
input   PxlStream_V_pixel_da_1_empty_n;
output   PxlStream_V_pixel_da_1_read;
input  [7:0] PxlStream_V_pixel_da_dout;
input   PxlStream_V_pixel_da_empty_n;
output   PxlStream_V_pixel_da_read;
input  [0:0] PxlStream_V_pixel_us_8_dout;
input   PxlStream_V_pixel_us_8_empty_n;
output   PxlStream_V_pixel_us_8_read;
input  [0:0] PxlStream_V_pixel_us_7_dout;
input   PxlStream_V_pixel_us_7_empty_n;
output   PxlStream_V_pixel_us_7_read;
input  [0:0] PxlStream_V_pixel_us_6_dout;
input   PxlStream_V_pixel_us_6_empty_n;
output   PxlStream_V_pixel_us_6_read;
input  [0:0] PxlStream_V_pixel_us_5_dout;
input   PxlStream_V_pixel_us_5_empty_n;
output   PxlStream_V_pixel_us_5_read;
input  [0:0] PxlStream_V_pixel_us_4_dout;
input   PxlStream_V_pixel_us_4_empty_n;
output   PxlStream_V_pixel_us_4_read;
input  [0:0] PxlStream_V_pixel_us_3_dout;
input   PxlStream_V_pixel_us_3_empty_n;
output   PxlStream_V_pixel_us_3_read;
input  [0:0] PxlStream_V_pixel_us_2_dout;
input   PxlStream_V_pixel_us_2_empty_n;
output   PxlStream_V_pixel_us_2_read;
input  [0:0] PxlStream_V_pixel_us_1_dout;
input   PxlStream_V_pixel_us_1_empty_n;
output   PxlStream_V_pixel_us_1_read;
input  [0:0] PxlStream_V_pixel_us_dout;
input   PxlStream_V_pixel_us_empty_n;
output   PxlStream_V_pixel_us_read;
input  [0:0] PxlStream_V_pixel_la_8_dout;
input   PxlStream_V_pixel_la_8_empty_n;
output   PxlStream_V_pixel_la_8_read;
input  [0:0] PxlStream_V_pixel_la_7_dout;
input   PxlStream_V_pixel_la_7_empty_n;
output   PxlStream_V_pixel_la_7_read;
input  [0:0] PxlStream_V_pixel_la_6_dout;
input   PxlStream_V_pixel_la_6_empty_n;
output   PxlStream_V_pixel_la_6_read;
input  [0:0] PxlStream_V_pixel_la_5_dout;
input   PxlStream_V_pixel_la_5_empty_n;
output   PxlStream_V_pixel_la_5_read;
input  [0:0] PxlStream_V_pixel_la_4_dout;
input   PxlStream_V_pixel_la_4_empty_n;
output   PxlStream_V_pixel_la_4_read;
input  [0:0] PxlStream_V_pixel_la_3_dout;
input   PxlStream_V_pixel_la_3_empty_n;
output   PxlStream_V_pixel_la_3_read;
input  [0:0] PxlStream_V_pixel_la_2_dout;
input   PxlStream_V_pixel_la_2_empty_n;
output   PxlStream_V_pixel_la_2_read;
input  [0:0] PxlStream_V_pixel_la_1_dout;
input   PxlStream_V_pixel_la_1_empty_n;
output   PxlStream_V_pixel_la_1_read;
input  [0:0] PxlStream_V_pixel_la_dout;
input   PxlStream_V_pixel_la_empty_n;
output   PxlStream_V_pixel_la_read;
output  [7:0] MdnStream_V_data_V_din;
input   MdnStream_V_data_V_full_n;
output   MdnStream_V_data_V_write;
output  [0:0] MdnStream_V_user_V_din;
input   MdnStream_V_user_V_full_n;
output   MdnStream_V_user_V_write;
output  [0:0] MdnStream_V_last_V_din;
input   MdnStream_V_last_V_full_n;
output   MdnStream_V_last_V_write;

reg ap_done;
reg ap_idle;
reg start_write;

reg    real_start;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
reg    internal_ap_ready;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    MdnStream_V_data_V1_status;
reg   [0:0] empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter12_empty_n_1_reg_825;
reg    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_flag00011001;
reg    start_once_reg;
reg    MdnStream_V_data_V_blk_n;
wire    ap_block_pp0_stage0_flag00000000;
reg    MdnStream_V_user_V_blk_n;
reg    MdnStream_V_last_V_blk_n;
reg   [0:0] ap_reg_pp0_iter1_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter2_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter3_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter4_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter5_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter6_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter7_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter8_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter9_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter10_empty_n_1_reg_825;
reg   [0:0] ap_reg_pp0_iter11_empty_n_1_reg_825;
reg   [7:0] tmp_pixel_data_V_0_0_reg_829;
reg   [7:0] tmp_pixel_data_V_0_1_reg_836;
reg   [7:0] tmp_pixel_data_V_0_2_reg_843;
reg   [7:0] tmp_pixel_data_V_1_0_reg_850;
reg   [7:0] tmp_pixel_data_V_1_1_reg_857;
reg   [7:0] tmp_pixel_data_V_1_2_reg_864;
reg   [7:0] tmp_pixel_data_V_2_0_reg_871;
reg   [7:0] tmp_pixel_data_V_2_1_reg_878;
reg   [7:0] tmp_pixel_data_V_2_2_reg_885;
reg   [7:0] ap_reg_pp0_iter1_tmp_pixel_data_V_2_2_reg_885;
reg   [0:0] tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter1_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter2_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter3_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter4_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter5_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter6_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter7_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter8_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter9_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter10_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter11_tmp_user_V_reg_892;
reg   [0:0] ap_reg_pp0_iter12_tmp_user_V_reg_892;
reg   [0:0] tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter1_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter2_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter3_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter4_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter5_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter6_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter7_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter8_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter9_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter10_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter11_tmp_last_V_reg_897;
reg   [0:0] ap_reg_pp0_iter12_tmp_last_V_reg_897;
wire   [7:0] storemerge_i_fu_205_p3;
reg   [7:0] storemerge_i_reg_902;
wire   [7:0] buffer_V_load_i_fu_211_p3;
reg   [7:0] buffer_V_load_i_reg_909;
reg   [7:0] ap_reg_pp0_iter2_buffer_V_load_i_reg_909;
wire   [7:0] storemerge1_i_fu_221_p3;
reg   [7:0] storemerge1_i_reg_916;
wire   [7:0] tmp_i_fu_227_p3;
reg   [7:0] tmp_i_reg_923;
wire   [7:0] storemerge2_i_fu_237_p3;
reg   [7:0] storemerge2_i_reg_930;
wire   [7:0] tmp_1_i_fu_243_p3;
reg   [7:0] tmp_1_i_reg_937;
wire   [7:0] storemerge3_i_fu_253_p3;
reg   [7:0] storemerge3_i_reg_944;
wire   [7:0] tmp_5_i_fu_259_p3;
reg   [7:0] tmp_5_i_reg_951;
wire   [7:0] storemerge4_i_fu_269_p3;
reg   [7:0] storemerge4_i_reg_958;
wire   [7:0] storemerge5_i_fu_275_p3;
reg   [7:0] storemerge5_i_reg_965;
wire   [7:0] storemerge6_i_fu_285_p3;
reg   [7:0] storemerge6_i_reg_972;
wire   [7:0] storemerge7_i_fu_291_p3;
reg   [7:0] storemerge7_i_reg_979;
wire   [7:0] storemerge8_i_fu_301_p3;
reg   [7:0] storemerge8_i_reg_986;
wire   [7:0] storemerge9_i_fu_307_p3;
reg   [7:0] storemerge9_i_reg_993;
wire   [7:0] buffer_V_load_8_i_fu_317_p3;
reg   [7:0] buffer_V_load_8_i_reg_1000;
wire   [7:0] buffer_V_load_9_i_fu_323_p3;
reg   [7:0] buffer_V_load_9_i_reg_1007;
reg   [7:0] ap_reg_pp0_iter3_buffer_V_load_9_i_reg_1007;
wire   [7:0] storemerge10_i_fu_333_p3;
reg   [7:0] storemerge10_i_reg_1014;
reg   [7:0] ap_reg_pp0_iter4_storemerge10_i_reg_1014;
wire   [7:0] buffer_V_load_11_i_fu_339_p3;
reg   [7:0] buffer_V_load_11_i_reg_1021;
wire   [7:0] storemerge11_i_fu_349_p3;
reg   [7:0] storemerge11_i_reg_1028;
wire   [7:0] buffer_V_load_13_i_fu_355_p3;
reg   [7:0] buffer_V_load_13_i_reg_1035;
wire   [7:0] storemerge12_i_fu_365_p3;
reg   [7:0] storemerge12_i_reg_1042;
wire   [7:0] buffer_V_load_15_i_fu_371_p3;
reg   [7:0] buffer_V_load_15_i_reg_1049;
wire   [7:0] storemerge13_i_fu_381_p3;
reg   [7:0] storemerge13_i_reg_1056;
wire   [7:0] buffer_V_load_17_i_fu_387_p3;
reg   [7:0] buffer_V_load_17_i_reg_1063;
wire   [7:0] storemerge14_i_fu_397_p3;
reg   [7:0] storemerge14_i_reg_1070;
wire   [7:0] buffer_V_load_3_1_i_fu_403_p3;
reg   [7:0] buffer_V_load_3_1_i_reg_1077;
wire   [7:0] storemerge15_i_fu_413_p3;
reg   [7:0] storemerge15_i_reg_1084;
wire   [7:0] buffer_V_load_5_1_i_fu_419_p3;
reg   [7:0] buffer_V_load_5_1_i_reg_1091;
wire   [7:0] storemerge16_i_fu_429_p3;
reg   [7:0] storemerge16_i_reg_1098;
wire   [7:0] buffer_V_load_7_1_i_fu_435_p3;
reg   [7:0] buffer_V_load_7_1_i_reg_1105;
wire   [7:0] storemerge17_i_fu_445_p3;
reg   [7:0] storemerge17_i_reg_1112;
wire   [7:0] buffer_V_load_9_1_i_fu_451_p3;
reg   [7:0] buffer_V_load_9_1_i_reg_1119;
reg   [7:0] ap_reg_pp0_iter5_buffer_V_load_9_1_i_reg_1119;
wire   [7:0] storemerge18_i_fu_461_p3;
reg   [7:0] storemerge18_i_reg_1126;
reg   [7:0] ap_reg_pp0_iter6_storemerge18_i_reg_1126;
wire   [7:0] buffer_V_load_11_1_i_fu_467_p3;
reg   [7:0] buffer_V_load_11_1_i_reg_1133;
wire   [7:0] storemerge19_i_fu_477_p3;
reg   [7:0] storemerge19_i_reg_1140;
wire   [7:0] buffer_V_load_13_1_i_fu_483_p3;
reg   [7:0] buffer_V_load_13_1_i_reg_1147;
wire   [7:0] storemerge20_i_fu_493_p3;
reg   [7:0] storemerge20_i_reg_1154;
wire   [7:0] buffer_V_load_15_1_i_fu_499_p3;
reg   [7:0] buffer_V_load_15_1_i_reg_1161;
wire   [7:0] storemerge21_i_fu_509_p3;
reg   [7:0] storemerge21_i_reg_1168;
wire   [7:0] buffer_V_load_17_1_i_fu_515_p3;
reg   [7:0] buffer_V_load_17_1_i_reg_1175;
wire   [7:0] storemerge22_i_fu_525_p3;
reg   [7:0] storemerge22_i_reg_1182;
wire   [7:0] buffer_V_load_3_2_i_fu_531_p3;
reg   [7:0] buffer_V_load_3_2_i_reg_1189;
wire   [7:0] storemerge23_i_fu_541_p3;
reg   [7:0] storemerge23_i_reg_1196;
wire   [7:0] buffer_V_load_5_2_i_fu_547_p3;
reg   [7:0] buffer_V_load_5_2_i_reg_1203;
wire   [7:0] storemerge24_i_fu_557_p3;
reg   [7:0] storemerge24_i_reg_1210;
wire   [7:0] buffer_V_load_7_2_i_fu_563_p3;
reg   [7:0] buffer_V_load_7_2_i_reg_1217;
wire   [7:0] storemerge25_i_fu_573_p3;
reg   [7:0] storemerge25_i_reg_1224;
wire   [7:0] buffer_V_load_9_2_i_fu_579_p3;
reg   [7:0] buffer_V_load_9_2_i_reg_1231;
reg   [7:0] ap_reg_pp0_iter7_buffer_V_load_9_2_i_reg_1231;
wire   [7:0] storemerge26_i_fu_589_p3;
reg   [7:0] storemerge26_i_reg_1237;
reg   [7:0] ap_reg_pp0_iter8_storemerge26_i_reg_1237;
wire   [7:0] buffer_V_load_11_2_i_fu_595_p3;
reg   [7:0] buffer_V_load_11_2_i_reg_1243;
wire   [7:0] storemerge27_i_fu_605_p3;
reg   [7:0] storemerge27_i_reg_1250;
wire   [7:0] buffer_V_load_13_2_i_fu_611_p3;
reg   [7:0] buffer_V_load_13_2_i_reg_1257;
wire   [7:0] storemerge28_i_fu_621_p3;
reg   [7:0] storemerge28_i_reg_1264;
wire   [7:0] buffer_V_load_15_2_i_fu_627_p3;
reg   [7:0] buffer_V_load_15_2_i_reg_1271;
wire   [7:0] storemerge29_i_fu_637_p3;
reg   [7:0] storemerge29_i_reg_1278;
wire   [7:0] buffer_V_load_17_2_i_fu_643_p3;
reg   [7:0] buffer_V_load_17_2_i_reg_1285;
wire   [7:0] storemerge30_i_fu_653_p3;
reg   [7:0] storemerge30_i_reg_1291;
wire   [7:0] buffer_V_load_3_3_i_fu_659_p3;
reg   [7:0] buffer_V_load_3_3_i_reg_1297;
wire   [7:0] storemerge31_i_fu_669_p3;
reg   [7:0] storemerge31_i_reg_1304;
wire   [7:0] buffer_V_load_5_3_i_fu_675_p3;
reg   [7:0] buffer_V_load_5_3_i_reg_1311;
wire   [7:0] storemerge32_i_fu_685_p3;
reg   [7:0] storemerge32_i_reg_1318;
wire   [7:0] buffer_V_load_7_3_i_fu_691_p3;
reg   [7:0] buffer_V_load_7_3_i_reg_1325;
wire   [7:0] storemerge33_i_fu_701_p3;
reg   [7:0] storemerge33_i_reg_1331;
wire   [7:0] buffer_V_load_11_3_i_fu_711_p3;
reg   [7:0] buffer_V_load_11_3_i_reg_1337;
wire   [7:0] storemerge34_i_fu_721_p3;
reg   [7:0] storemerge34_i_reg_1343;
wire   [7:0] buffer_V_load_13_3_i_fu_727_p3;
reg   [7:0] buffer_V_load_13_3_i_reg_1349;
wire   [7:0] storemerge35_i_fu_737_p3;
reg   [7:0] storemerge35_i_reg_1356;
wire   [7:0] buffer_V_load_15_3_i_fu_743_p3;
reg   [7:0] buffer_V_load_15_3_i_reg_1363;
wire   [7:0] storemerge36_i_fu_753_p3;
reg   [7:0] storemerge36_i_reg_1369;
wire   [7:0] buffer_V_load_3_4_i_fu_763_p3;
reg   [7:0] buffer_V_load_3_4_i_reg_1375;
wire   [7:0] storemerge37_i_fu_773_p3;
reg   [7:0] storemerge37_i_reg_1381;
wire   [7:0] buffer_V_load_5_4_i_fu_779_p3;
reg   [7:0] buffer_V_load_5_4_i_reg_1387;
wire   [7:0] storemerge38_i_fu_789_p3;
reg   [7:0] storemerge38_i_reg_1393;
wire   [7:0] buffer_V_load_13_4_i_fu_799_p3;
reg   [7:0] buffer_V_load_13_4_i_reg_1399;
wire   [7:0] storemerge39_i_fu_809_p3;
reg   [7:0] storemerge39_i_reg_1405;
wire   [7:0] tmp_data_V_fu_819_p3;
reg   [7:0] tmp_data_V_reg_1411;
reg    ap_block_pp0_stage0_flag00011011;
reg    PxlStream_V_pixel_da0_update;
reg    ap_condition_502;
wire   [0:0] empty_n_nbread_fu_82_p28_0;
reg    MdnStream_V_data_V1_update;
reg    ap_block_pp0_stage0_flag00001001;
wire   [0:0] tmp_2_i_fu_201_p2;
wire   [0:0] tmp_8_i_fu_217_p2;
wire   [0:0] tmp_4_i_fu_233_p2;
wire   [0:0] tmp_3_i_fu_249_p2;
wire   [0:0] tmp_6_i_fu_265_p2;
wire   [0:0] tmp_7_i_fu_281_p2;
wire   [0:0] tmp_9_i_fu_297_p2;
wire   [0:0] tmp_10_i_fu_313_p2;
wire   [0:0] tmp_20_i_fu_329_p2;
wire   [0:0] tmp_21_i_fu_345_p2;
wire   [0:0] tmp_22_i_fu_361_p2;
wire   [0:0] tmp_23_i_fu_377_p2;
wire   [0:0] tmp_24_i_fu_393_p2;
wire   [0:0] tmp_25_i_fu_409_p2;
wire   [0:0] tmp_26_i_fu_425_p2;
wire   [0:0] tmp_27_i_fu_441_p2;
wire   [0:0] tmp_20_1_i_fu_457_p2;
wire   [0:0] tmp_21_1_i_fu_473_p2;
wire   [0:0] tmp_22_1_i_fu_489_p2;
wire   [0:0] tmp_23_1_i_fu_505_p2;
wire   [0:0] tmp_24_1_i_fu_521_p2;
wire   [0:0] tmp_25_1_i_fu_537_p2;
wire   [0:0] tmp_26_1_i_fu_553_p2;
wire   [0:0] tmp_27_1_i_fu_569_p2;
wire   [0:0] tmp_20_2_i_fu_585_p2;
wire   [0:0] tmp_21_2_i_fu_601_p2;
wire   [0:0] tmp_22_2_i_fu_617_p2;
wire   [0:0] tmp_23_2_i_fu_633_p2;
wire   [0:0] tmp_24_2_i_fu_649_p2;
wire   [0:0] tmp_25_2_i_fu_665_p2;
wire   [0:0] tmp_26_2_i_fu_681_p2;
wire   [0:0] tmp_27_2_i_fu_697_p2;
wire   [0:0] tmp_20_3_i_fu_707_p2;
wire   [0:0] tmp_21_3_i_fu_717_p2;
wire   [0:0] tmp_22_3_i_fu_733_p2;
wire   [0:0] tmp_23_3_i_fu_749_p2;
wire   [0:0] tmp_24_3_i_fu_759_p2;
wire   [0:0] tmp_25_3_i_fu_769_p2;
wire   [0:0] tmp_26_3_i_fu_785_p2;
wire   [0:0] tmp_21_4_i_fu_795_p2;
wire   [0:0] tmp_22_4_i_fu_805_p2;
wire   [0:0] tmp_25_4_i_fu_815_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to12;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 start_once_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0))) begin
            ap_enable_reg_pp0_iter1 <= real_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if ((1'b1 == real_start)) begin
            start_once_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_flag00011001 == 1'b0)) begin
        ap_reg_pp0_iter10_empty_n_1_reg_825 <= ap_reg_pp0_iter9_empty_n_1_reg_825;
        ap_reg_pp0_iter10_tmp_last_V_reg_897 <= ap_reg_pp0_iter9_tmp_last_V_reg_897;
        ap_reg_pp0_iter10_tmp_user_V_reg_892 <= ap_reg_pp0_iter9_tmp_user_V_reg_892;
        ap_reg_pp0_iter11_empty_n_1_reg_825 <= ap_reg_pp0_iter10_empty_n_1_reg_825;
        ap_reg_pp0_iter11_tmp_last_V_reg_897 <= ap_reg_pp0_iter10_tmp_last_V_reg_897;
        ap_reg_pp0_iter11_tmp_user_V_reg_892 <= ap_reg_pp0_iter10_tmp_user_V_reg_892;
        ap_reg_pp0_iter12_empty_n_1_reg_825 <= ap_reg_pp0_iter11_empty_n_1_reg_825;
        ap_reg_pp0_iter12_tmp_last_V_reg_897 <= ap_reg_pp0_iter11_tmp_last_V_reg_897;
        ap_reg_pp0_iter12_tmp_user_V_reg_892 <= ap_reg_pp0_iter11_tmp_user_V_reg_892;
        ap_reg_pp0_iter2_buffer_V_load_i_reg_909 <= buffer_V_load_i_reg_909;
        ap_reg_pp0_iter2_empty_n_1_reg_825 <= ap_reg_pp0_iter1_empty_n_1_reg_825;
        ap_reg_pp0_iter2_tmp_last_V_reg_897 <= ap_reg_pp0_iter1_tmp_last_V_reg_897;
        ap_reg_pp0_iter2_tmp_user_V_reg_892 <= ap_reg_pp0_iter1_tmp_user_V_reg_892;
        ap_reg_pp0_iter3_buffer_V_load_9_i_reg_1007 <= buffer_V_load_9_i_reg_1007;
        ap_reg_pp0_iter3_empty_n_1_reg_825 <= ap_reg_pp0_iter2_empty_n_1_reg_825;
        ap_reg_pp0_iter3_tmp_last_V_reg_897 <= ap_reg_pp0_iter2_tmp_last_V_reg_897;
        ap_reg_pp0_iter3_tmp_user_V_reg_892 <= ap_reg_pp0_iter2_tmp_user_V_reg_892;
        ap_reg_pp0_iter4_empty_n_1_reg_825 <= ap_reg_pp0_iter3_empty_n_1_reg_825;
        ap_reg_pp0_iter4_storemerge10_i_reg_1014 <= storemerge10_i_reg_1014;
        ap_reg_pp0_iter4_tmp_last_V_reg_897 <= ap_reg_pp0_iter3_tmp_last_V_reg_897;
        ap_reg_pp0_iter4_tmp_user_V_reg_892 <= ap_reg_pp0_iter3_tmp_user_V_reg_892;
        ap_reg_pp0_iter5_buffer_V_load_9_1_i_reg_1119 <= buffer_V_load_9_1_i_reg_1119;
        ap_reg_pp0_iter5_empty_n_1_reg_825 <= ap_reg_pp0_iter4_empty_n_1_reg_825;
        ap_reg_pp0_iter5_tmp_last_V_reg_897 <= ap_reg_pp0_iter4_tmp_last_V_reg_897;
        ap_reg_pp0_iter5_tmp_user_V_reg_892 <= ap_reg_pp0_iter4_tmp_user_V_reg_892;
        ap_reg_pp0_iter6_empty_n_1_reg_825 <= ap_reg_pp0_iter5_empty_n_1_reg_825;
        ap_reg_pp0_iter6_storemerge18_i_reg_1126 <= storemerge18_i_reg_1126;
        ap_reg_pp0_iter6_tmp_last_V_reg_897 <= ap_reg_pp0_iter5_tmp_last_V_reg_897;
        ap_reg_pp0_iter6_tmp_user_V_reg_892 <= ap_reg_pp0_iter5_tmp_user_V_reg_892;
        ap_reg_pp0_iter7_buffer_V_load_9_2_i_reg_1231 <= buffer_V_load_9_2_i_reg_1231;
        ap_reg_pp0_iter7_empty_n_1_reg_825 <= ap_reg_pp0_iter6_empty_n_1_reg_825;
        ap_reg_pp0_iter7_tmp_last_V_reg_897 <= ap_reg_pp0_iter6_tmp_last_V_reg_897;
        ap_reg_pp0_iter7_tmp_user_V_reg_892 <= ap_reg_pp0_iter6_tmp_user_V_reg_892;
        ap_reg_pp0_iter8_empty_n_1_reg_825 <= ap_reg_pp0_iter7_empty_n_1_reg_825;
        ap_reg_pp0_iter8_storemerge26_i_reg_1237 <= storemerge26_i_reg_1237;
        ap_reg_pp0_iter8_tmp_last_V_reg_897 <= ap_reg_pp0_iter7_tmp_last_V_reg_897;
        ap_reg_pp0_iter8_tmp_user_V_reg_892 <= ap_reg_pp0_iter7_tmp_user_V_reg_892;
        ap_reg_pp0_iter9_empty_n_1_reg_825 <= ap_reg_pp0_iter8_empty_n_1_reg_825;
        ap_reg_pp0_iter9_tmp_last_V_reg_897 <= ap_reg_pp0_iter8_tmp_last_V_reg_897;
        ap_reg_pp0_iter9_tmp_user_V_reg_892 <= ap_reg_pp0_iter8_tmp_user_V_reg_892;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_empty_n_1_reg_825 <= empty_n_1_reg_825;
        ap_reg_pp0_iter1_tmp_last_V_reg_897 <= tmp_last_V_reg_897;
        ap_reg_pp0_iter1_tmp_pixel_data_V_2_2_reg_885 <= tmp_pixel_data_V_2_2_reg_885;
        ap_reg_pp0_iter1_tmp_user_V_reg_892 <= tmp_user_V_reg_892;
        empty_n_1_reg_825 <= empty_n_nbread_fu_82_p28_0;
        tmp_last_V_reg_897 <= PxlStream_V_pixel_la_4_dout;
        tmp_pixel_data_V_0_0_reg_829 <= PxlStream_V_pixel_da_8_dout;
        tmp_pixel_data_V_0_1_reg_836 <= PxlStream_V_pixel_da_7_dout;
        tmp_pixel_data_V_0_2_reg_843 <= PxlStream_V_pixel_da_6_dout;
        tmp_pixel_data_V_1_0_reg_850 <= PxlStream_V_pixel_da_5_dout;
        tmp_pixel_data_V_1_1_reg_857 <= PxlStream_V_pixel_da_4_dout;
        tmp_pixel_data_V_1_2_reg_864 <= PxlStream_V_pixel_da_3_dout;
        tmp_pixel_data_V_2_0_reg_871 <= PxlStream_V_pixel_da_2_dout;
        tmp_pixel_data_V_2_1_reg_878 <= PxlStream_V_pixel_da_1_dout;
        tmp_pixel_data_V_2_2_reg_885 <= PxlStream_V_pixel_da_dout;
        tmp_user_V_reg_892 <= PxlStream_V_pixel_us_4_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter4_empty_n_1_reg_825))) begin
        buffer_V_load_11_1_i_reg_1133 <= buffer_V_load_11_1_i_fu_467_p3;
        buffer_V_load_13_1_i_reg_1147 <= buffer_V_load_13_1_i_fu_483_p3;
        buffer_V_load_15_1_i_reg_1161 <= buffer_V_load_15_1_i_fu_499_p3;
        buffer_V_load_17_1_i_reg_1175 <= buffer_V_load_17_1_i_fu_515_p3;
        storemerge18_i_reg_1126 <= storemerge18_i_fu_461_p3;
        storemerge19_i_reg_1140 <= storemerge19_i_fu_477_p3;
        storemerge20_i_reg_1154 <= storemerge20_i_fu_493_p3;
        storemerge21_i_reg_1168 <= storemerge21_i_fu_509_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter6_empty_n_1_reg_825))) begin
        buffer_V_load_11_2_i_reg_1243 <= buffer_V_load_11_2_i_fu_595_p3;
        buffer_V_load_13_2_i_reg_1257 <= buffer_V_load_13_2_i_fu_611_p3;
        buffer_V_load_15_2_i_reg_1271 <= buffer_V_load_15_2_i_fu_627_p3;
        buffer_V_load_17_2_i_reg_1285 <= buffer_V_load_17_2_i_fu_643_p3;
        storemerge26_i_reg_1237 <= storemerge26_i_fu_589_p3;
        storemerge27_i_reg_1250 <= storemerge27_i_fu_605_p3;
        storemerge28_i_reg_1264 <= storemerge28_i_fu_621_p3;
        storemerge29_i_reg_1278 <= storemerge29_i_fu_637_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter8_empty_n_1_reg_825))) begin
        buffer_V_load_11_3_i_reg_1337 <= buffer_V_load_11_3_i_fu_711_p3;
        buffer_V_load_13_3_i_reg_1349 <= buffer_V_load_13_3_i_fu_727_p3;
        buffer_V_load_15_3_i_reg_1363 <= buffer_V_load_15_3_i_fu_743_p3;
        storemerge34_i_reg_1343 <= storemerge34_i_fu_721_p3;
        storemerge35_i_reg_1356 <= storemerge35_i_fu_737_p3;
        storemerge36_i_reg_1369 <= storemerge36_i_fu_753_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter2_empty_n_1_reg_825))) begin
        buffer_V_load_11_i_reg_1021 <= buffer_V_load_11_i_fu_339_p3;
        buffer_V_load_13_i_reg_1035 <= buffer_V_load_13_i_fu_355_p3;
        buffer_V_load_15_i_reg_1049 <= buffer_V_load_15_i_fu_371_p3;
        buffer_V_load_17_i_reg_1063 <= buffer_V_load_17_i_fu_387_p3;
        storemerge10_i_reg_1014 <= storemerge10_i_fu_333_p3;
        storemerge11_i_reg_1028 <= storemerge11_i_fu_349_p3;
        storemerge12_i_reg_1042 <= storemerge12_i_fu_365_p3;
        storemerge13_i_reg_1056 <= storemerge13_i_fu_381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter10_empty_n_1_reg_825))) begin
        buffer_V_load_13_4_i_reg_1399 <= buffer_V_load_13_4_i_fu_799_p3;
        storemerge39_i_reg_1405 <= storemerge39_i_fu_809_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter3_empty_n_1_reg_825))) begin
        buffer_V_load_3_1_i_reg_1077 <= buffer_V_load_3_1_i_fu_403_p3;
        buffer_V_load_5_1_i_reg_1091 <= buffer_V_load_5_1_i_fu_419_p3;
        buffer_V_load_7_1_i_reg_1105 <= buffer_V_load_7_1_i_fu_435_p3;
        buffer_V_load_9_1_i_reg_1119 <= buffer_V_load_9_1_i_fu_451_p3;
        storemerge14_i_reg_1070 <= storemerge14_i_fu_397_p3;
        storemerge15_i_reg_1084 <= storemerge15_i_fu_413_p3;
        storemerge16_i_reg_1098 <= storemerge16_i_fu_429_p3;
        storemerge17_i_reg_1112 <= storemerge17_i_fu_445_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter5_empty_n_1_reg_825))) begin
        buffer_V_load_3_2_i_reg_1189 <= buffer_V_load_3_2_i_fu_531_p3;
        buffer_V_load_5_2_i_reg_1203 <= buffer_V_load_5_2_i_fu_547_p3;
        buffer_V_load_7_2_i_reg_1217 <= buffer_V_load_7_2_i_fu_563_p3;
        buffer_V_load_9_2_i_reg_1231 <= buffer_V_load_9_2_i_fu_579_p3;
        storemerge22_i_reg_1182 <= storemerge22_i_fu_525_p3;
        storemerge23_i_reg_1196 <= storemerge23_i_fu_541_p3;
        storemerge24_i_reg_1210 <= storemerge24_i_fu_557_p3;
        storemerge25_i_reg_1224 <= storemerge25_i_fu_573_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter7_empty_n_1_reg_825))) begin
        buffer_V_load_3_3_i_reg_1297 <= buffer_V_load_3_3_i_fu_659_p3;
        buffer_V_load_5_3_i_reg_1311 <= buffer_V_load_5_3_i_fu_675_p3;
        buffer_V_load_7_3_i_reg_1325 <= buffer_V_load_7_3_i_fu_691_p3;
        storemerge30_i_reg_1291 <= storemerge30_i_fu_653_p3;
        storemerge31_i_reg_1304 <= storemerge31_i_fu_669_p3;
        storemerge32_i_reg_1318 <= storemerge32_i_fu_685_p3;
        storemerge33_i_reg_1331 <= storemerge33_i_fu_701_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter9_empty_n_1_reg_825))) begin
        buffer_V_load_3_4_i_reg_1375 <= buffer_V_load_3_4_i_fu_763_p3;
        buffer_V_load_5_4_i_reg_1387 <= buffer_V_load_5_4_i_fu_779_p3;
        storemerge37_i_reg_1381 <= storemerge37_i_fu_773_p3;
        storemerge38_i_reg_1393 <= storemerge38_i_fu_789_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_empty_n_1_reg_825))) begin
        buffer_V_load_8_i_reg_1000 <= buffer_V_load_8_i_fu_317_p3;
        buffer_V_load_9_i_reg_1007 <= buffer_V_load_9_i_fu_323_p3;
        storemerge4_i_reg_958 <= storemerge4_i_fu_269_p3;
        storemerge5_i_reg_965 <= storemerge5_i_fu_275_p3;
        storemerge6_i_reg_972 <= storemerge6_i_fu_285_p3;
        storemerge7_i_reg_979 <= storemerge7_i_fu_291_p3;
        storemerge8_i_reg_986 <= storemerge8_i_fu_301_p3;
        storemerge9_i_reg_993 <= storemerge9_i_fu_307_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (empty_n_1_reg_825 == 1'd1))) begin
        buffer_V_load_i_reg_909 <= buffer_V_load_i_fu_211_p3;
        storemerge1_i_reg_916 <= storemerge1_i_fu_221_p3;
        storemerge2_i_reg_930 <= storemerge2_i_fu_237_p3;
        storemerge3_i_reg_944 <= storemerge3_i_fu_253_p3;
        storemerge_i_reg_902 <= storemerge_i_fu_205_p3;
        tmp_1_i_reg_937 <= tmp_1_i_fu_243_p3;
        tmp_5_i_reg_951 <= tmp_5_i_fu_259_p3;
        tmp_i_reg_923 <= tmp_i_fu_227_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'd1 == ap_reg_pp0_iter11_empty_n_1_reg_825))) begin
        tmp_data_V_reg_1411 <= tmp_data_V_fu_819_p3;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        MdnStream_V_data_V1_update = 1'b1;
    end else begin
        MdnStream_V_data_V1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        MdnStream_V_data_V_blk_n = MdnStream_V_data_V_full_n;
    end else begin
        MdnStream_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        MdnStream_V_last_V_blk_n = MdnStream_V_last_V_full_n;
    end else begin
        MdnStream_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        MdnStream_V_user_V_blk_n = MdnStream_V_user_V_full_n;
    end else begin
        MdnStream_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == real_start) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (ap_condition_502 == 1'b1))) begin
        PxlStream_V_pixel_da0_update = 1'b1;
    end else begin
        PxlStream_V_pixel_da0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter13) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == real_start) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_idle_pp0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12))) begin
        ap_idle_pp0_0to12 = 1'b1;
    end else begin
        ap_idle_pp0_0to12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == real_start) & (1'b1 == ap_idle_pp0_0to12))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == real_start) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == start_full_n)) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == real_start) & ((1'b1 == internal_ap_ready) | (1'b0 == start_once_reg)))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MdnStream_V_data_V1_status = (MdnStream_V_data_V_full_n & MdnStream_V_user_V_full_n & MdnStream_V_last_V_full_n);

assign MdnStream_V_data_V_din = tmp_data_V_reg_1411;

assign MdnStream_V_data_V_write = MdnStream_V_data_V1_update;

assign MdnStream_V_last_V_din = ap_reg_pp0_iter12_tmp_last_V_reg_897;

assign MdnStream_V_last_V_write = MdnStream_V_data_V1_update;

assign MdnStream_V_user_V_din = ap_reg_pp0_iter12_tmp_user_V_reg_892;

assign MdnStream_V_user_V_write = MdnStream_V_data_V1_update;

assign PxlStream_V_pixel_da_1_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_2_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_3_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_4_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_5_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_6_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_7_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_8_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_da_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_1_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_2_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_3_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_4_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_5_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_6_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_7_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_8_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_la_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_1_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_2_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_3_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_4_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_5_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_6_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_7_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_8_read = PxlStream_V_pixel_da0_update;

assign PxlStream_V_pixel_us_read = PxlStream_V_pixel_da0_update;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00001001 = ((ap_done_reg == 1'b1) | ((1'b1 == real_start) & ((1'b0 == real_start) | (ap_done_reg == 1'b1))) | ((1'b0 == MdnStream_V_data_V1_status) & (ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = ((ap_done_reg == 1'b1) | ((1'b1 == real_start) & ((1'b0 == real_start) | (ap_done_reg == 1'b1))) | ((1'b0 == MdnStream_V_data_V1_status) & (ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13)));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = ((ap_done_reg == 1'b1) | ((1'b1 == real_start) & ((1'b0 == real_start) | (ap_done_reg == 1'b1))) | ((1'b0 == MdnStream_V_data_V1_status) & (ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1) & (1'b1 == ap_enable_reg_pp0_iter13)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter13 = ((1'b0 == MdnStream_V_data_V1_status) & (ap_reg_pp0_iter12_empty_n_1_reg_825 == 1'd1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((1'b0 == real_start) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_502 = (1'b1 == (PxlStream_V_pixel_da_8_empty_n & PxlStream_V_pixel_da_7_empty_n & PxlStream_V_pixel_da_6_empty_n & PxlStream_V_pixel_da_5_empty_n & PxlStream_V_pixel_da_4_empty_n & PxlStream_V_pixel_da_3_empty_n & PxlStream_V_pixel_da_2_empty_n & PxlStream_V_pixel_da_1_empty_n & PxlStream_V_pixel_da_empty_n & PxlStream_V_pixel_us_8_empty_n & PxlStream_V_pixel_us_7_empty_n & PxlStream_V_pixel_us_6_empty_n & PxlStream_V_pixel_us_5_empty_n & PxlStream_V_pixel_us_4_empty_n & PxlStream_V_pixel_us_3_empty_n & PxlStream_V_pixel_us_2_empty_n & PxlStream_V_pixel_us_1_empty_n & PxlStream_V_pixel_us_empty_n & PxlStream_V_pixel_la_8_empty_n & PxlStream_V_pixel_la_7_empty_n & PxlStream_V_pixel_la_6_empty_n & PxlStream_V_pixel_la_5_empty_n & PxlStream_V_pixel_la_4_empty_n & PxlStream_V_pixel_la_3_empty_n & PxlStream_V_pixel_la_2_empty_n & PxlStream_V_pixel_la_1_empty_n & PxlStream_V_pixel_la_empty_n));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = real_start;

assign ap_ready = internal_ap_ready;

assign buffer_V_load_11_1_i_fu_467_p3 = ((tmp_20_1_i_fu_457_p2[0:0] === 1'b1) ? ap_reg_pp0_iter4_storemerge10_i_reg_1014 : storemerge14_i_reg_1070);

assign buffer_V_load_11_2_i_fu_595_p3 = ((tmp_20_2_i_fu_585_p2[0:0] === 1'b1) ? ap_reg_pp0_iter6_storemerge18_i_reg_1126 : storemerge22_i_reg_1182);

assign buffer_V_load_11_3_i_fu_711_p3 = ((tmp_20_3_i_fu_707_p2[0:0] === 1'b1) ? ap_reg_pp0_iter8_storemerge26_i_reg_1237 : storemerge30_i_reg_1291);

assign buffer_V_load_11_i_fu_339_p3 = ((tmp_20_i_fu_329_p2[0:0] === 1'b1) ? ap_reg_pp0_iter2_buffer_V_load_i_reg_909 : storemerge4_i_reg_958);

assign buffer_V_load_13_1_i_fu_483_p3 = ((tmp_21_1_i_fu_473_p2[0:0] === 1'b1) ? buffer_V_load_3_1_i_reg_1077 : storemerge15_i_reg_1084);

assign buffer_V_load_13_2_i_fu_611_p3 = ((tmp_21_2_i_fu_601_p2[0:0] === 1'b1) ? buffer_V_load_3_2_i_reg_1189 : storemerge23_i_reg_1196);

assign buffer_V_load_13_3_i_fu_727_p3 = ((tmp_21_3_i_fu_717_p2[0:0] === 1'b1) ? buffer_V_load_3_3_i_reg_1297 : storemerge31_i_reg_1304);

assign buffer_V_load_13_4_i_fu_799_p3 = ((tmp_21_4_i_fu_795_p2[0:0] === 1'b1) ? buffer_V_load_3_4_i_reg_1375 : storemerge37_i_reg_1381);

assign buffer_V_load_13_i_fu_355_p3 = ((tmp_21_i_fu_345_p2[0:0] === 1'b1) ? storemerge5_i_reg_965 : storemerge6_i_reg_972);

assign buffer_V_load_15_1_i_fu_499_p3 = ((tmp_22_1_i_fu_489_p2[0:0] === 1'b1) ? buffer_V_load_5_1_i_reg_1091 : storemerge16_i_reg_1098);

assign buffer_V_load_15_2_i_fu_627_p3 = ((tmp_22_2_i_fu_617_p2[0:0] === 1'b1) ? buffer_V_load_5_2_i_reg_1203 : storemerge24_i_reg_1210);

assign buffer_V_load_15_3_i_fu_743_p3 = ((tmp_22_3_i_fu_733_p2[0:0] === 1'b1) ? buffer_V_load_5_3_i_reg_1311 : storemerge32_i_reg_1318);

assign buffer_V_load_15_i_fu_371_p3 = ((tmp_22_i_fu_361_p2[0:0] === 1'b1) ? storemerge7_i_reg_979 : storemerge8_i_reg_986);

assign buffer_V_load_17_1_i_fu_515_p3 = ((tmp_23_1_i_fu_505_p2[0:0] === 1'b1) ? buffer_V_load_7_1_i_reg_1105 : storemerge17_i_reg_1112);

assign buffer_V_load_17_2_i_fu_643_p3 = ((tmp_23_2_i_fu_633_p2[0:0] === 1'b1) ? buffer_V_load_7_2_i_reg_1217 : storemerge25_i_reg_1224);

assign buffer_V_load_17_i_fu_387_p3 = ((tmp_23_i_fu_377_p2[0:0] === 1'b1) ? storemerge9_i_reg_993 : buffer_V_load_8_i_reg_1000);

assign buffer_V_load_3_1_i_fu_403_p3 = ((tmp_24_i_fu_393_p2[0:0] === 1'b1) ? buffer_V_load_11_i_reg_1021 : storemerge11_i_reg_1028);

assign buffer_V_load_3_2_i_fu_531_p3 = ((tmp_24_1_i_fu_521_p2[0:0] === 1'b1) ? buffer_V_load_11_1_i_reg_1133 : storemerge19_i_reg_1140);

assign buffer_V_load_3_3_i_fu_659_p3 = ((tmp_24_2_i_fu_649_p2[0:0] === 1'b1) ? buffer_V_load_11_2_i_reg_1243 : storemerge27_i_reg_1250);

assign buffer_V_load_3_4_i_fu_763_p3 = ((tmp_24_3_i_fu_759_p2[0:0] === 1'b1) ? buffer_V_load_11_3_i_reg_1337 : storemerge34_i_reg_1343);

assign buffer_V_load_5_1_i_fu_419_p3 = ((tmp_25_i_fu_409_p2[0:0] === 1'b1) ? buffer_V_load_13_i_reg_1035 : storemerge12_i_reg_1042);

assign buffer_V_load_5_2_i_fu_547_p3 = ((tmp_25_1_i_fu_537_p2[0:0] === 1'b1) ? buffer_V_load_13_1_i_reg_1147 : storemerge20_i_reg_1154);

assign buffer_V_load_5_3_i_fu_675_p3 = ((tmp_25_2_i_fu_665_p2[0:0] === 1'b1) ? buffer_V_load_13_2_i_reg_1257 : storemerge28_i_reg_1264);

assign buffer_V_load_5_4_i_fu_779_p3 = ((tmp_25_3_i_fu_769_p2[0:0] === 1'b1) ? buffer_V_load_13_3_i_reg_1349 : storemerge35_i_reg_1356);

assign buffer_V_load_7_1_i_fu_435_p3 = ((tmp_26_i_fu_425_p2[0:0] === 1'b1) ? buffer_V_load_15_i_reg_1049 : storemerge13_i_reg_1056);

assign buffer_V_load_7_2_i_fu_563_p3 = ((tmp_26_1_i_fu_553_p2[0:0] === 1'b1) ? buffer_V_load_15_1_i_reg_1161 : storemerge21_i_reg_1168);

assign buffer_V_load_7_3_i_fu_691_p3 = ((tmp_26_2_i_fu_681_p2[0:0] === 1'b1) ? buffer_V_load_15_2_i_reg_1271 : storemerge29_i_reg_1278);

assign buffer_V_load_8_i_fu_317_p3 = ((tmp_10_i_fu_313_p2[0:0] === 1'b1) ? ap_reg_pp0_iter1_tmp_pixel_data_V_2_2_reg_885 : storemerge3_i_reg_944);

assign buffer_V_load_9_1_i_fu_451_p3 = ((tmp_27_i_fu_441_p2[0:0] === 1'b1) ? buffer_V_load_17_i_reg_1063 : ap_reg_pp0_iter3_buffer_V_load_9_i_reg_1007);

assign buffer_V_load_9_2_i_fu_579_p3 = ((tmp_27_1_i_fu_569_p2[0:0] === 1'b1) ? buffer_V_load_17_1_i_reg_1175 : ap_reg_pp0_iter5_buffer_V_load_9_1_i_reg_1119);

assign buffer_V_load_9_i_fu_323_p3 = ((tmp_10_i_fu_313_p2[0:0] === 1'b1) ? storemerge3_i_reg_944 : ap_reg_pp0_iter1_tmp_pixel_data_V_2_2_reg_885);

assign buffer_V_load_i_fu_211_p3 = ((tmp_2_i_fu_201_p2[0:0] === 1'b1) ? tmp_pixel_data_V_0_1_reg_836 : tmp_pixel_data_V_0_0_reg_829);

assign empty_n_nbread_fu_82_p28_0 = (PxlStream_V_pixel_da_8_empty_n & PxlStream_V_pixel_da_7_empty_n & PxlStream_V_pixel_da_6_empty_n & PxlStream_V_pixel_da_5_empty_n & PxlStream_V_pixel_da_4_empty_n & PxlStream_V_pixel_da_3_empty_n & PxlStream_V_pixel_da_2_empty_n & PxlStream_V_pixel_da_1_empty_n & PxlStream_V_pixel_da_empty_n & PxlStream_V_pixel_us_8_empty_n & PxlStream_V_pixel_us_7_empty_n & PxlStream_V_pixel_us_6_empty_n & PxlStream_V_pixel_us_5_empty_n & PxlStream_V_pixel_us_4_empty_n & PxlStream_V_pixel_us_3_empty_n & PxlStream_V_pixel_us_2_empty_n & PxlStream_V_pixel_us_1_empty_n & PxlStream_V_pixel_us_empty_n & PxlStream_V_pixel_la_8_empty_n & PxlStream_V_pixel_la_7_empty_n & PxlStream_V_pixel_la_6_empty_n & PxlStream_V_pixel_la_5_empty_n & PxlStream_V_pixel_la_4_empty_n & PxlStream_V_pixel_la_3_empty_n & PxlStream_V_pixel_la_2_empty_n & PxlStream_V_pixel_la_1_empty_n & PxlStream_V_pixel_la_empty_n);

assign start_out = real_start;

assign storemerge10_i_fu_333_p3 = ((tmp_20_i_fu_329_p2[0:0] === 1'b1) ? storemerge4_i_reg_958 : ap_reg_pp0_iter2_buffer_V_load_i_reg_909);

assign storemerge11_i_fu_349_p3 = ((tmp_21_i_fu_345_p2[0:0] === 1'b1) ? storemerge6_i_reg_972 : storemerge5_i_reg_965);

assign storemerge12_i_fu_365_p3 = ((tmp_22_i_fu_361_p2[0:0] === 1'b1) ? storemerge8_i_reg_986 : storemerge7_i_reg_979);

assign storemerge13_i_fu_381_p3 = ((tmp_23_i_fu_377_p2[0:0] === 1'b1) ? buffer_V_load_8_i_reg_1000 : storemerge9_i_reg_993);

assign storemerge14_i_fu_397_p3 = ((tmp_24_i_fu_393_p2[0:0] === 1'b1) ? storemerge11_i_reg_1028 : buffer_V_load_11_i_reg_1021);

assign storemerge15_i_fu_413_p3 = ((tmp_25_i_fu_409_p2[0:0] === 1'b1) ? storemerge12_i_reg_1042 : buffer_V_load_13_i_reg_1035);

assign storemerge16_i_fu_429_p3 = ((tmp_26_i_fu_425_p2[0:0] === 1'b1) ? storemerge13_i_reg_1056 : buffer_V_load_15_i_reg_1049);

assign storemerge17_i_fu_445_p3 = ((tmp_27_i_fu_441_p2[0:0] === 1'b1) ? ap_reg_pp0_iter3_buffer_V_load_9_i_reg_1007 : buffer_V_load_17_i_reg_1063);

assign storemerge18_i_fu_461_p3 = ((tmp_20_1_i_fu_457_p2[0:0] === 1'b1) ? storemerge14_i_reg_1070 : ap_reg_pp0_iter4_storemerge10_i_reg_1014);

assign storemerge19_i_fu_477_p3 = ((tmp_21_1_i_fu_473_p2[0:0] === 1'b1) ? storemerge15_i_reg_1084 : buffer_V_load_3_1_i_reg_1077);

assign storemerge1_i_fu_221_p3 = ((tmp_8_i_fu_217_p2[0:0] === 1'b1) ? tmp_pixel_data_V_0_2_reg_843 : tmp_pixel_data_V_1_0_reg_850);

assign storemerge20_i_fu_493_p3 = ((tmp_22_1_i_fu_489_p2[0:0] === 1'b1) ? storemerge16_i_reg_1098 : buffer_V_load_5_1_i_reg_1091);

assign storemerge21_i_fu_509_p3 = ((tmp_23_1_i_fu_505_p2[0:0] === 1'b1) ? storemerge17_i_reg_1112 : buffer_V_load_7_1_i_reg_1105);

assign storemerge22_i_fu_525_p3 = ((tmp_24_1_i_fu_521_p2[0:0] === 1'b1) ? storemerge19_i_reg_1140 : buffer_V_load_11_1_i_reg_1133);

assign storemerge23_i_fu_541_p3 = ((tmp_25_1_i_fu_537_p2[0:0] === 1'b1) ? storemerge20_i_reg_1154 : buffer_V_load_13_1_i_reg_1147);

assign storemerge24_i_fu_557_p3 = ((tmp_26_1_i_fu_553_p2[0:0] === 1'b1) ? storemerge21_i_reg_1168 : buffer_V_load_15_1_i_reg_1161);

assign storemerge25_i_fu_573_p3 = ((tmp_27_1_i_fu_569_p2[0:0] === 1'b1) ? ap_reg_pp0_iter5_buffer_V_load_9_1_i_reg_1119 : buffer_V_load_17_1_i_reg_1175);

assign storemerge26_i_fu_589_p3 = ((tmp_20_2_i_fu_585_p2[0:0] === 1'b1) ? storemerge22_i_reg_1182 : ap_reg_pp0_iter6_storemerge18_i_reg_1126);

assign storemerge27_i_fu_605_p3 = ((tmp_21_2_i_fu_601_p2[0:0] === 1'b1) ? storemerge23_i_reg_1196 : buffer_V_load_3_2_i_reg_1189);

assign storemerge28_i_fu_621_p3 = ((tmp_22_2_i_fu_617_p2[0:0] === 1'b1) ? storemerge24_i_reg_1210 : buffer_V_load_5_2_i_reg_1203);

assign storemerge29_i_fu_637_p3 = ((tmp_23_2_i_fu_633_p2[0:0] === 1'b1) ? storemerge25_i_reg_1224 : buffer_V_load_7_2_i_reg_1217);

assign storemerge2_i_fu_237_p3 = ((tmp_4_i_fu_233_p2[0:0] === 1'b1) ? tmp_pixel_data_V_1_1_reg_857 : tmp_pixel_data_V_1_2_reg_864);

assign storemerge30_i_fu_653_p3 = ((tmp_24_2_i_fu_649_p2[0:0] === 1'b1) ? storemerge27_i_reg_1250 : buffer_V_load_11_2_i_reg_1243);

assign storemerge31_i_fu_669_p3 = ((tmp_25_2_i_fu_665_p2[0:0] === 1'b1) ? storemerge28_i_reg_1264 : buffer_V_load_13_2_i_reg_1257);

assign storemerge32_i_fu_685_p3 = ((tmp_26_2_i_fu_681_p2[0:0] === 1'b1) ? storemerge29_i_reg_1278 : buffer_V_load_15_2_i_reg_1271);

assign storemerge33_i_fu_701_p3 = ((tmp_27_2_i_fu_697_p2[0:0] === 1'b1) ? ap_reg_pp0_iter7_buffer_V_load_9_2_i_reg_1231 : buffer_V_load_17_2_i_reg_1285);

assign storemerge34_i_fu_721_p3 = ((tmp_21_3_i_fu_717_p2[0:0] === 1'b1) ? storemerge31_i_reg_1304 : buffer_V_load_3_3_i_reg_1297);

assign storemerge35_i_fu_737_p3 = ((tmp_22_3_i_fu_733_p2[0:0] === 1'b1) ? storemerge32_i_reg_1318 : buffer_V_load_5_3_i_reg_1311);

assign storemerge36_i_fu_753_p3 = ((tmp_23_3_i_fu_749_p2[0:0] === 1'b1) ? storemerge33_i_reg_1331 : buffer_V_load_7_3_i_reg_1325);

assign storemerge37_i_fu_773_p3 = ((tmp_25_3_i_fu_769_p2[0:0] === 1'b1) ? storemerge35_i_reg_1356 : buffer_V_load_13_3_i_reg_1349);

assign storemerge38_i_fu_789_p3 = ((tmp_26_3_i_fu_785_p2[0:0] === 1'b1) ? storemerge36_i_reg_1369 : buffer_V_load_15_3_i_reg_1363);

assign storemerge39_i_fu_809_p3 = ((tmp_22_4_i_fu_805_p2[0:0] === 1'b1) ? storemerge38_i_reg_1393 : buffer_V_load_5_4_i_reg_1387);

assign storemerge3_i_fu_253_p3 = ((tmp_3_i_fu_249_p2[0:0] === 1'b1) ? tmp_pixel_data_V_2_0_reg_871 : tmp_pixel_data_V_2_1_reg_878);

assign storemerge4_i_fu_269_p3 = ((tmp_6_i_fu_265_p2[0:0] === 1'b1) ? tmp_i_reg_923 : storemerge_i_reg_902);

assign storemerge5_i_fu_275_p3 = ((tmp_6_i_fu_265_p2[0:0] === 1'b1) ? storemerge_i_reg_902 : tmp_i_reg_923);

assign storemerge6_i_fu_285_p3 = ((tmp_7_i_fu_281_p2[0:0] === 1'b1) ? tmp_1_i_reg_937 : storemerge1_i_reg_916);

assign storemerge7_i_fu_291_p3 = ((tmp_7_i_fu_281_p2[0:0] === 1'b1) ? storemerge1_i_reg_916 : tmp_1_i_reg_937);

assign storemerge8_i_fu_301_p3 = ((tmp_9_i_fu_297_p2[0:0] === 1'b1) ? tmp_5_i_reg_951 : storemerge2_i_reg_930);

assign storemerge9_i_fu_307_p3 = ((tmp_9_i_fu_297_p2[0:0] === 1'b1) ? storemerge2_i_reg_930 : tmp_5_i_reg_951);

assign storemerge_i_fu_205_p3 = ((tmp_2_i_fu_201_p2[0:0] === 1'b1) ? tmp_pixel_data_V_0_0_reg_829 : tmp_pixel_data_V_0_1_reg_836);

assign tmp_10_i_fu_313_p2 = ((storemerge3_i_reg_944 > ap_reg_pp0_iter1_tmp_pixel_data_V_2_2_reg_885) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_243_p3 = ((tmp_4_i_fu_233_p2[0:0] === 1'b1) ? tmp_pixel_data_V_1_2_reg_864 : tmp_pixel_data_V_1_1_reg_857);

assign tmp_20_1_i_fu_457_p2 = ((ap_reg_pp0_iter4_storemerge10_i_reg_1014 > storemerge14_i_reg_1070) ? 1'b1 : 1'b0);

assign tmp_20_2_i_fu_585_p2 = ((ap_reg_pp0_iter6_storemerge18_i_reg_1126 > storemerge22_i_reg_1182) ? 1'b1 : 1'b0);

assign tmp_20_3_i_fu_707_p2 = ((ap_reg_pp0_iter8_storemerge26_i_reg_1237 > storemerge30_i_reg_1291) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_329_p2 = ((ap_reg_pp0_iter2_buffer_V_load_i_reg_909 > storemerge4_i_reg_958) ? 1'b1 : 1'b0);

assign tmp_21_1_i_fu_473_p2 = ((buffer_V_load_3_1_i_reg_1077 > storemerge15_i_reg_1084) ? 1'b1 : 1'b0);

assign tmp_21_2_i_fu_601_p2 = ((buffer_V_load_3_2_i_reg_1189 > storemerge23_i_reg_1196) ? 1'b1 : 1'b0);

assign tmp_21_3_i_fu_717_p2 = ((buffer_V_load_3_3_i_reg_1297 > storemerge31_i_reg_1304) ? 1'b1 : 1'b0);

assign tmp_21_4_i_fu_795_p2 = ((buffer_V_load_3_4_i_reg_1375 > storemerge37_i_reg_1381) ? 1'b1 : 1'b0);

assign tmp_21_i_fu_345_p2 = ((storemerge5_i_reg_965 > storemerge6_i_reg_972) ? 1'b1 : 1'b0);

assign tmp_22_1_i_fu_489_p2 = ((buffer_V_load_5_1_i_reg_1091 > storemerge16_i_reg_1098) ? 1'b1 : 1'b0);

assign tmp_22_2_i_fu_617_p2 = ((buffer_V_load_5_2_i_reg_1203 > storemerge24_i_reg_1210) ? 1'b1 : 1'b0);

assign tmp_22_3_i_fu_733_p2 = ((buffer_V_load_5_3_i_reg_1311 > storemerge32_i_reg_1318) ? 1'b1 : 1'b0);

assign tmp_22_4_i_fu_805_p2 = ((buffer_V_load_5_4_i_reg_1387 > storemerge38_i_reg_1393) ? 1'b1 : 1'b0);

assign tmp_22_i_fu_361_p2 = ((storemerge7_i_reg_979 > storemerge8_i_reg_986) ? 1'b1 : 1'b0);

assign tmp_23_1_i_fu_505_p2 = ((buffer_V_load_7_1_i_reg_1105 > storemerge17_i_reg_1112) ? 1'b1 : 1'b0);

assign tmp_23_2_i_fu_633_p2 = ((buffer_V_load_7_2_i_reg_1217 > storemerge25_i_reg_1224) ? 1'b1 : 1'b0);

assign tmp_23_3_i_fu_749_p2 = ((buffer_V_load_7_3_i_reg_1325 > storemerge33_i_reg_1331) ? 1'b1 : 1'b0);

assign tmp_23_i_fu_377_p2 = ((storemerge9_i_reg_993 > buffer_V_load_8_i_reg_1000) ? 1'b1 : 1'b0);

assign tmp_24_1_i_fu_521_p2 = ((buffer_V_load_11_1_i_reg_1133 > storemerge19_i_reg_1140) ? 1'b1 : 1'b0);

assign tmp_24_2_i_fu_649_p2 = ((buffer_V_load_11_2_i_reg_1243 > storemerge27_i_reg_1250) ? 1'b1 : 1'b0);

assign tmp_24_3_i_fu_759_p2 = ((buffer_V_load_11_3_i_reg_1337 > storemerge34_i_reg_1343) ? 1'b1 : 1'b0);

assign tmp_24_i_fu_393_p2 = ((buffer_V_load_11_i_reg_1021 > storemerge11_i_reg_1028) ? 1'b1 : 1'b0);

assign tmp_25_1_i_fu_537_p2 = ((buffer_V_load_13_1_i_reg_1147 > storemerge20_i_reg_1154) ? 1'b1 : 1'b0);

assign tmp_25_2_i_fu_665_p2 = ((buffer_V_load_13_2_i_reg_1257 > storemerge28_i_reg_1264) ? 1'b1 : 1'b0);

assign tmp_25_3_i_fu_769_p2 = ((buffer_V_load_13_3_i_reg_1349 > storemerge35_i_reg_1356) ? 1'b1 : 1'b0);

assign tmp_25_4_i_fu_815_p2 = ((buffer_V_load_13_4_i_reg_1399 > storemerge39_i_reg_1405) ? 1'b1 : 1'b0);

assign tmp_25_i_fu_409_p2 = ((buffer_V_load_13_i_reg_1035 > storemerge12_i_reg_1042) ? 1'b1 : 1'b0);

assign tmp_26_1_i_fu_553_p2 = ((buffer_V_load_15_1_i_reg_1161 > storemerge21_i_reg_1168) ? 1'b1 : 1'b0);

assign tmp_26_2_i_fu_681_p2 = ((buffer_V_load_15_2_i_reg_1271 > storemerge29_i_reg_1278) ? 1'b1 : 1'b0);

assign tmp_26_3_i_fu_785_p2 = ((buffer_V_load_15_3_i_reg_1363 > storemerge36_i_reg_1369) ? 1'b1 : 1'b0);

assign tmp_26_i_fu_425_p2 = ((buffer_V_load_15_i_reg_1049 > storemerge13_i_reg_1056) ? 1'b1 : 1'b0);

assign tmp_27_1_i_fu_569_p2 = ((buffer_V_load_17_1_i_reg_1175 > ap_reg_pp0_iter5_buffer_V_load_9_1_i_reg_1119) ? 1'b1 : 1'b0);

assign tmp_27_2_i_fu_697_p2 = ((buffer_V_load_17_2_i_reg_1285 > ap_reg_pp0_iter7_buffer_V_load_9_2_i_reg_1231) ? 1'b1 : 1'b0);

assign tmp_27_i_fu_441_p2 = ((buffer_V_load_17_i_reg_1063 > ap_reg_pp0_iter3_buffer_V_load_9_i_reg_1007) ? 1'b1 : 1'b0);

assign tmp_2_i_fu_201_p2 = ((tmp_pixel_data_V_0_0_reg_829 > tmp_pixel_data_V_0_1_reg_836) ? 1'b1 : 1'b0);

assign tmp_3_i_fu_249_p2 = ((tmp_pixel_data_V_2_0_reg_871 > tmp_pixel_data_V_2_1_reg_878) ? 1'b1 : 1'b0);

assign tmp_4_i_fu_233_p2 = ((tmp_pixel_data_V_1_1_reg_857 > tmp_pixel_data_V_1_2_reg_864) ? 1'b1 : 1'b0);

assign tmp_5_i_fu_259_p3 = ((tmp_3_i_fu_249_p2[0:0] === 1'b1) ? tmp_pixel_data_V_2_1_reg_878 : tmp_pixel_data_V_2_0_reg_871);

assign tmp_6_i_fu_265_p2 = ((storemerge_i_reg_902 > tmp_i_reg_923) ? 1'b1 : 1'b0);

assign tmp_7_i_fu_281_p2 = ((storemerge1_i_reg_916 > tmp_1_i_reg_937) ? 1'b1 : 1'b0);

assign tmp_8_i_fu_217_p2 = ((tmp_pixel_data_V_0_2_reg_843 > tmp_pixel_data_V_1_0_reg_850) ? 1'b1 : 1'b0);

assign tmp_9_i_fu_297_p2 = ((storemerge2_i_reg_930 > tmp_5_i_reg_951) ? 1'b1 : 1'b0);

assign tmp_data_V_fu_819_p3 = ((tmp_25_4_i_fu_815_p2[0:0] === 1'b1) ? buffer_V_load_13_4_i_reg_1399 : storemerge39_i_reg_1405);

assign tmp_i_fu_227_p3 = ((tmp_8_i_fu_217_p2[0:0] === 1'b1) ? tmp_pixel_data_V_1_0_reg_850 : tmp_pixel_data_V_0_2_reg_843);

endmodule //Median
